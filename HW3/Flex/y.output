Grammar

    0 $accept: start $end

    1 start: input

    2 input: expression
    3      | expression_list
    4      | function_definition
    5      | control_statement
    6      | variable_definition
    7      | exit_statement
    8      | print_statement
    9      | load_statement

   10 expression_list: OP_OP valid_expression_list OP_CP

   11 valid_expression_list: expression_list expression
   12                      | /* empty */

   13 expression: OP_OP KW_AND expression expression OP_CP
   14           | OP_OP KW_OR expression expression OP_CP
   15           | OP_OP KW_NOT expression OP_CP
   16           | OP_OP KW_EQUAL expression expression OP_CP
   17           | OP_OP KW_LESS expression expression OP_CP
   18           | OP_OP KW_LIST expression_list OP_CP
   19           | OP_OP KW_APPEND expression expression OP_CP
   20           | OP_OP KW_CONCAT expression expression OP_CP
   21           | OP_OP OP_PLUS expression expression OP_CP
   22           | OP_OP OP_MINUS expression expression OP_CP
   23           | OP_OP OP_MULT expression expression OP_CP
   24           | OP_OP OP_DIV expression expression OP_CP
   25           | VALUEI
   26           | VALUEF
   27           | IDENTIFIER
   28           | KW_TRUE
   29           | KW_FALSE
   30           | KW_NIL

   31 function_definition: OP_OP KW_DEFFUN IDENTIFIER parameter_list expression_list OP_CP

   32 parameter_list: OP_OP parameter_list IDENTIFIER OP_CP
   33               | IDENTIFIER

   34 control_statement: OP_OP KW_IF expression expression_list OP_CP
   35                  | OP_OP KW_IF expression expression_list expression_list OP_CP
   36                  | OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP

   37 variable_definition: OP_OP KW_SET IDENTIFIER expression OP_CP

   38 exit_statement: OP_OP KW_EXIT OP_CP

   39 print_statement: OP_OP KW_PRINT expression OP_CP

   40 load_statement: OP_OP KW_LOAD IDENTIFIER OP_CP


Terminals, with rules where they appear

$end (0) 0
error (256)
KW_AND (258) 13
KW_OR (259) 14
KW_NOT (260) 15
KW_EQUAL (261) 16
KW_LESS (262) 17
KW_NIL (263) 30
KW_LIST (264) 18
KW_APPEND (265) 19
KW_CONCAT (266) 20
KW_SET (267) 37
KW_DEFFUN (268) 31
KW_FOR (269) 36
KW_IF (270) 34 35
KW_EXIT (271) 38
KW_LOAD (272) 40
KW_PRINT (273) 39
KW_TRUE (274) 28
KW_FALSE (275) 29
OP_OP (276) 10 13 14 15 16 17 18 19 20 21 22 23 24 31 32 34 35 36 37
    38 39 40
OP_CP (277) 10 13 14 15 16 17 18 19 20 21 22 23 24 31 32 34 35 36 37
    38 39 40
OP_PLUS (278) 21
OP_MINUS (279) 22
OP_MULT (280) 23
OP_DIV (281) 24
VALUEI (282) 25
VALUEF (283) 26
IDENTIFIER (284) 27 31 32 33 36 37 40


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
start (31)
    on left: 1, on right: 0
input (32)
    on left: 2 3 4 5 6 7 8 9, on right: 1
expression_list (33)
    on left: 10, on right: 3 11 18 31 34 35 36
valid_expression_list (34)
    on left: 11 12, on right: 10
expression (35)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
   , on right: 2 11 13 14 15 16 17 19 20 21 22 23 24 34 35 36 37 39
function_definition (36)
    on left: 31, on right: 4
parameter_list (37)
    on left: 32 33, on right: 31 32
control_statement (38)
    on left: 34 35 36, on right: 5
variable_definition (39)
    on left: 37, on right: 6
exit_statement (40)
    on left: 38, on right: 7
print_statement (41)
    on left: 39, on right: 8
load_statement (42)
    on left: 40, on right: 9


state 0

    0 $accept: . start $end

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 4
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    start                go to state 8
    input                go to state 9
    expression_list      go to state 10
    expression           go to state 11
    function_definition  go to state 12
    control_statement    go to state 13
    variable_definition  go to state 14
    exit_statement       go to state 15
    print_statement      go to state 16
    load_statement       go to state 17


state 1

   30 expression: KW_NIL .

    $default  reduce using rule 30 (expression)


state 2

   28 expression: KW_TRUE .

    $default  reduce using rule 28 (expression)


state 3

   29 expression: KW_FALSE .

    $default  reduce using rule 29 (expression)


state 4

   10 expression_list: OP_OP . valid_expression_list OP_CP
   13 expression: OP_OP . KW_AND expression expression OP_CP
   14           | OP_OP . KW_OR expression expression OP_CP
   15           | OP_OP . KW_NOT expression OP_CP
   16           | OP_OP . KW_EQUAL expression expression OP_CP
   17           | OP_OP . KW_LESS expression expression OP_CP
   18           | OP_OP . KW_LIST expression_list OP_CP
   19           | OP_OP . KW_APPEND expression expression OP_CP
   20           | OP_OP . KW_CONCAT expression expression OP_CP
   21           | OP_OP . OP_PLUS expression expression OP_CP
   22           | OP_OP . OP_MINUS expression expression OP_CP
   23           | OP_OP . OP_MULT expression expression OP_CP
   24           | OP_OP . OP_DIV expression expression OP_CP
   31 function_definition: OP_OP . KW_DEFFUN IDENTIFIER parameter_list expression_list OP_CP
   34 control_statement: OP_OP . KW_IF expression expression_list OP_CP
   35                  | OP_OP . KW_IF expression expression_list expression_list OP_CP
   36                  | OP_OP . KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP
   37 variable_definition: OP_OP . KW_SET IDENTIFIER expression OP_CP
   38 exit_statement: OP_OP . KW_EXIT OP_CP
   39 print_statement: OP_OP . KW_PRINT expression OP_CP
   40 load_statement: OP_OP . KW_LOAD IDENTIFIER OP_CP

    KW_AND     shift, and go to state 18
    KW_OR      shift, and go to state 19
    KW_NOT     shift, and go to state 20
    KW_EQUAL   shift, and go to state 21
    KW_LESS    shift, and go to state 22
    KW_LIST    shift, and go to state 23
    KW_APPEND  shift, and go to state 24
    KW_CONCAT  shift, and go to state 25
    KW_SET     shift, and go to state 26
    KW_DEFFUN  shift, and go to state 27
    KW_FOR     shift, and go to state 28
    KW_IF      shift, and go to state 29
    KW_EXIT    shift, and go to state 30
    KW_LOAD    shift, and go to state 31
    KW_PRINT   shift, and go to state 32
    OP_OP      shift, and go to state 33
    OP_PLUS    shift, and go to state 34
    OP_MINUS   shift, and go to state 35
    OP_MULT    shift, and go to state 36
    OP_DIV     shift, and go to state 37

    $default  reduce using rule 12 (valid_expression_list)

    expression_list        go to state 38
    valid_expression_list  go to state 39


state 5

   25 expression: VALUEI .

    $default  reduce using rule 25 (expression)


state 6

   26 expression: VALUEF .

    $default  reduce using rule 26 (expression)


state 7

   27 expression: IDENTIFIER .

    $default  reduce using rule 27 (expression)


state 8

    0 $accept: start . $end

    $end  shift, and go to state 40


state 9

    1 start: input .

    $default  reduce using rule 1 (start)


state 10

    3 input: expression_list .

    $default  reduce using rule 3 (input)


state 11

    2 input: expression .

    $default  reduce using rule 2 (input)


state 12

    4 input: function_definition .

    $default  reduce using rule 4 (input)


state 13

    5 input: control_statement .

    $default  reduce using rule 5 (input)


state 14

    6 input: variable_definition .

    $default  reduce using rule 6 (input)


state 15

    7 input: exit_statement .

    $default  reduce using rule 7 (input)


state 16

    8 input: print_statement .

    $default  reduce using rule 8 (input)


state 17

    9 input: load_statement .

    $default  reduce using rule 9 (input)


state 18

   13 expression: OP_OP KW_AND . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 42


state 19

   14 expression: OP_OP KW_OR . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 43


state 20

   15 expression: OP_OP KW_NOT . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 44


state 21

   16 expression: OP_OP KW_EQUAL . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 45


state 22

   17 expression: OP_OP KW_LESS . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 46


state 23

   18 expression: OP_OP KW_LIST . expression_list OP_CP

    OP_OP  shift, and go to state 33

    expression_list  go to state 47


state 24

   19 expression: OP_OP KW_APPEND . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 48


state 25

   20 expression: OP_OP KW_CONCAT . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 49


state 26

   37 variable_definition: OP_OP KW_SET . IDENTIFIER expression OP_CP

    IDENTIFIER  shift, and go to state 50


state 27

   31 function_definition: OP_OP KW_DEFFUN . IDENTIFIER parameter_list expression_list OP_CP

    IDENTIFIER  shift, and go to state 51


state 28

   36 control_statement: OP_OP KW_FOR . OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP

    OP_OP  shift, and go to state 52


state 29

   34 control_statement: OP_OP KW_IF . expression expression_list OP_CP
   35                  | OP_OP KW_IF . expression expression_list expression_list OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 53


state 30

   38 exit_statement: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 54


state 31

   40 load_statement: OP_OP KW_LOAD . IDENTIFIER OP_CP

    IDENTIFIER  shift, and go to state 55


state 32

   39 print_statement: OP_OP KW_PRINT . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 56


state 33

   10 expression_list: OP_OP . valid_expression_list OP_CP

    OP_OP  shift, and go to state 33

    $default  reduce using rule 12 (valid_expression_list)

    expression_list        go to state 38
    valid_expression_list  go to state 39


state 34

   21 expression: OP_OP OP_PLUS . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 57


state 35

   22 expression: OP_OP OP_MINUS . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 58


state 36

   23 expression: OP_OP OP_MULT . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 59


state 37

   24 expression: OP_OP OP_DIV . expression expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 60


state 38

   11 valid_expression_list: expression_list . expression

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 61


state 39

   10 expression_list: OP_OP valid_expression_list . OP_CP

    OP_CP  shift, and go to state 62


state 40

    0 $accept: start $end .

    $default  accept


state 41

   13 expression: OP_OP . KW_AND expression expression OP_CP
   14           | OP_OP . KW_OR expression expression OP_CP
   15           | OP_OP . KW_NOT expression OP_CP
   16           | OP_OP . KW_EQUAL expression expression OP_CP
   17           | OP_OP . KW_LESS expression expression OP_CP
   18           | OP_OP . KW_LIST expression_list OP_CP
   19           | OP_OP . KW_APPEND expression expression OP_CP
   20           | OP_OP . KW_CONCAT expression expression OP_CP
   21           | OP_OP . OP_PLUS expression expression OP_CP
   22           | OP_OP . OP_MINUS expression expression OP_CP
   23           | OP_OP . OP_MULT expression expression OP_CP
   24           | OP_OP . OP_DIV expression expression OP_CP

    KW_AND     shift, and go to state 18
    KW_OR      shift, and go to state 19
    KW_NOT     shift, and go to state 20
    KW_EQUAL   shift, and go to state 21
    KW_LESS    shift, and go to state 22
    KW_LIST    shift, and go to state 23
    KW_APPEND  shift, and go to state 24
    KW_CONCAT  shift, and go to state 25
    OP_PLUS    shift, and go to state 34
    OP_MINUS   shift, and go to state 35
    OP_MULT    shift, and go to state 36
    OP_DIV     shift, and go to state 37


state 42

   13 expression: OP_OP KW_AND expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 63


state 43

   14 expression: OP_OP KW_OR expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 64


state 44

   15 expression: OP_OP KW_NOT expression . OP_CP

    OP_CP  shift, and go to state 65


state 45

   16 expression: OP_OP KW_EQUAL expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 66


state 46

   17 expression: OP_OP KW_LESS expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 67


state 47

   18 expression: OP_OP KW_LIST expression_list . OP_CP

    OP_CP  shift, and go to state 68


state 48

   19 expression: OP_OP KW_APPEND expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 69


state 49

   20 expression: OP_OP KW_CONCAT expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 70


state 50

   37 variable_definition: OP_OP KW_SET IDENTIFIER . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 71


state 51

   31 function_definition: OP_OP KW_DEFFUN IDENTIFIER . parameter_list expression_list OP_CP

    OP_OP       shift, and go to state 72
    IDENTIFIER  shift, and go to state 73

    parameter_list  go to state 74


state 52

   36 control_statement: OP_OP KW_FOR OP_OP . IDENTIFIER expression expression OP_CP expression_list OP_CP

    IDENTIFIER  shift, and go to state 75


state 53

   34 control_statement: OP_OP KW_IF expression . expression_list OP_CP
   35                  | OP_OP KW_IF expression . expression_list expression_list OP_CP

    OP_OP  shift, and go to state 33

    expression_list  go to state 76


state 54

   38 exit_statement: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 38 (exit_statement)


state 55

   40 load_statement: OP_OP KW_LOAD IDENTIFIER . OP_CP

    OP_CP  shift, and go to state 77


state 56

   39 print_statement: OP_OP KW_PRINT expression . OP_CP

    OP_CP  shift, and go to state 78


state 57

   21 expression: OP_OP OP_PLUS expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 79


state 58

   22 expression: OP_OP OP_MINUS expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 80


state 59

   23 expression: OP_OP OP_MULT expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 81


state 60

   24 expression: OP_OP OP_DIV expression . expression OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 82


state 61

   11 valid_expression_list: expression_list expression .

    $default  reduce using rule 11 (valid_expression_list)


state 62

   10 expression_list: OP_OP valid_expression_list OP_CP .

    $default  reduce using rule 10 (expression_list)


state 63

   13 expression: OP_OP KW_AND expression expression . OP_CP

    OP_CP  shift, and go to state 83


state 64

   14 expression: OP_OP KW_OR expression expression . OP_CP

    OP_CP  shift, and go to state 84


state 65

   15 expression: OP_OP KW_NOT expression OP_CP .

    $default  reduce using rule 15 (expression)


state 66

   16 expression: OP_OP KW_EQUAL expression expression . OP_CP

    OP_CP  shift, and go to state 85


state 67

   17 expression: OP_OP KW_LESS expression expression . OP_CP

    OP_CP  shift, and go to state 86


state 68

   18 expression: OP_OP KW_LIST expression_list OP_CP .

    $default  reduce using rule 18 (expression)


state 69

   19 expression: OP_OP KW_APPEND expression expression . OP_CP

    OP_CP  shift, and go to state 87


state 70

   20 expression: OP_OP KW_CONCAT expression expression . OP_CP

    OP_CP  shift, and go to state 88


state 71

   37 variable_definition: OP_OP KW_SET IDENTIFIER expression . OP_CP

    OP_CP  shift, and go to state 89


state 72

   32 parameter_list: OP_OP . parameter_list IDENTIFIER OP_CP

    OP_OP       shift, and go to state 72
    IDENTIFIER  shift, and go to state 73

    parameter_list  go to state 90


state 73

   33 parameter_list: IDENTIFIER .

    $default  reduce using rule 33 (parameter_list)


state 74

   31 function_definition: OP_OP KW_DEFFUN IDENTIFIER parameter_list . expression_list OP_CP

    OP_OP  shift, and go to state 33

    expression_list  go to state 91


state 75

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER . expression expression OP_CP expression_list OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 92


state 76

   34 control_statement: OP_OP KW_IF expression expression_list . OP_CP
   35                  | OP_OP KW_IF expression expression_list . expression_list OP_CP

    OP_OP  shift, and go to state 33
    OP_CP  shift, and go to state 93

    expression_list  go to state 94


state 77

   40 load_statement: OP_OP KW_LOAD IDENTIFIER OP_CP .

    $default  reduce using rule 40 (load_statement)


state 78

   39 print_statement: OP_OP KW_PRINT expression OP_CP .

    $default  reduce using rule 39 (print_statement)


state 79

   21 expression: OP_OP OP_PLUS expression expression . OP_CP

    OP_CP  shift, and go to state 95


state 80

   22 expression: OP_OP OP_MINUS expression expression . OP_CP

    OP_CP  shift, and go to state 96


state 81

   23 expression: OP_OP OP_MULT expression expression . OP_CP

    OP_CP  shift, and go to state 97


state 82

   24 expression: OP_OP OP_DIV expression expression . OP_CP

    OP_CP  shift, and go to state 98


state 83

   13 expression: OP_OP KW_AND expression expression OP_CP .

    $default  reduce using rule 13 (expression)


state 84

   14 expression: OP_OP KW_OR expression expression OP_CP .

    $default  reduce using rule 14 (expression)


state 85

   16 expression: OP_OP KW_EQUAL expression expression OP_CP .

    $default  reduce using rule 16 (expression)


state 86

   17 expression: OP_OP KW_LESS expression expression OP_CP .

    $default  reduce using rule 17 (expression)


state 87

   19 expression: OP_OP KW_APPEND expression expression OP_CP .

    $default  reduce using rule 19 (expression)


state 88

   20 expression: OP_OP KW_CONCAT expression expression OP_CP .

    $default  reduce using rule 20 (expression)


state 89

   37 variable_definition: OP_OP KW_SET IDENTIFIER expression OP_CP .

    $default  reduce using rule 37 (variable_definition)


state 90

   32 parameter_list: OP_OP parameter_list . IDENTIFIER OP_CP

    IDENTIFIER  shift, and go to state 99


state 91

   31 function_definition: OP_OP KW_DEFFUN IDENTIFIER parameter_list expression_list . OP_CP

    OP_CP  shift, and go to state 100


state 92

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER expression . expression OP_CP expression_list OP_CP

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 41
    VALUEI      shift, and go to state 5
    VALUEF      shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    expression  go to state 101


state 93

   34 control_statement: OP_OP KW_IF expression expression_list OP_CP .

    $default  reduce using rule 34 (control_statement)


state 94

   35 control_statement: OP_OP KW_IF expression expression_list expression_list . OP_CP

    OP_CP  shift, and go to state 102


state 95

   21 expression: OP_OP OP_PLUS expression expression OP_CP .

    $default  reduce using rule 21 (expression)


state 96

   22 expression: OP_OP OP_MINUS expression expression OP_CP .

    $default  reduce using rule 22 (expression)


state 97

   23 expression: OP_OP OP_MULT expression expression OP_CP .

    $default  reduce using rule 23 (expression)


state 98

   24 expression: OP_OP OP_DIV expression expression OP_CP .

    $default  reduce using rule 24 (expression)


state 99

   32 parameter_list: OP_OP parameter_list IDENTIFIER . OP_CP

    OP_CP  shift, and go to state 103


state 100

   31 function_definition: OP_OP KW_DEFFUN IDENTIFIER parameter_list expression_list OP_CP .

    $default  reduce using rule 31 (function_definition)


state 101

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER expression expression . OP_CP expression_list OP_CP

    OP_CP  shift, and go to state 104


state 102

   35 control_statement: OP_OP KW_IF expression expression_list expression_list OP_CP .

    $default  reduce using rule 35 (control_statement)


state 103

   32 parameter_list: OP_OP parameter_list IDENTIFIER OP_CP .

    $default  reduce using rule 32 (parameter_list)


state 104

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP . expression_list OP_CP

    OP_OP  shift, and go to state 33

    expression_list  go to state 105


state 105

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list . OP_CP

    OP_CP  shift, and go to state 106


state 106

   36 control_statement: OP_OP KW_FOR OP_OP IDENTIFIER expression expression OP_CP expression_list OP_CP .

    $default  reduce using rule 36 (control_statement)
